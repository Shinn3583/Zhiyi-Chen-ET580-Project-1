ET580 – Project I: Group A Summary Report

Phase 1
In Phase 1, our team implemented file reading and dynamic array storage. 
The program successfully reads numerical data from data.csv using the File class and stores it inside the StringArray container.
The output displays the loaded data correctly. Constructors, destructors, and encapsulation were applied to manage dynamic memory safely.

Phase 2
Phase 2 extended the project by adding extended member functions to the container class according to Group A’s requirements.
We implemented and tested:
at() for indexed value access with validation.
resize() for dynamic array resizing (both shrinking and expanding).
pop_back() for removing the last element safely.
insert() for inserting new values at a specific index.
erase() for deleting elements at a given index.
All functions worked correctly, handling memory updates and producing the expected formatted output.

Team Contributions
Zhiyi Chen – Phase 1 initialization, dynamic memory setup, constructor/destructor.
Gabriel Sencion – File input handling, debugging CSV reading, and Makefile setup.
Giankarlo Gomez – Phase 2 implementation (extended member functions), testing, code formatting, and Makefile update.
Result
Both phases compile and run successfully with make.
The output matches all project specifications.